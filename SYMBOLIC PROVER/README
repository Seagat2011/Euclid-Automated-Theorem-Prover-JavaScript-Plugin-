ABOUT FILE(S)
    Prover.htm          - HTML5 Prover / main
    GNU LICENSE         - GNU/LGNU license-file of user rights
    README              - Description of euclid & associated files
    AUTHORS             - Contributors

HOW EUCLID WORKS (HOW EUCLID BUILDS INTERNAL ASSOCIATIONS..

    Euclid maps onto a network topology

        Example

            x = a           (00)
            a times b = c   (01)
            Prove { x times b = c }
            
                INTERNAL REPRESENTATION
                
                a
                |                 (00)
                x  
                

                a times b           (01)
                         \
                          =
                         /
                       c
               
                                                               
                x
                |
                a
                 \
                   times b         (00+01)
                          \
                           =
                          /
                         c 
                
                Euclid uses axioms that you provide to build an internal representation, 
                or network, (a connected DiGraph) and iff Euclid can then traverse from x to c, 
                the theorem is proved.
                
                Notice however that the node is not collapsed any further!
                This is to prevent non-determinism (NFA loops)
                Operators are never used to construct nodes.


BUGFIX
    SYMP: ahs-emscripten intf 6 parses only enums having capitalized words
    SOLU: Had to fix (so lazy)
    
    SYMP: [this.parser{}] undefined!
    SOLU: revert to global space
    
    SYMP: whileloop:parser() results in infinite tail-recursion (potential buffer-overflow)
    SOLU: parser() should only check existence of node, without traversing it (scalable)
    
    SYMP: loader not defined
    SOLU: (1) check for matching braces, or (2) broken regular expressions, (3) ..scoping issues

    SYMP: upon return from Array.map(), <TR> table fails to render
    SOLU: assign result of Array.map() to variable

    SYMP: <span..></span> tags <td> render incorrectly
    SOLU: use <div..></div> tags
    
    SYMP: Comment.activate_lineComment() fails to activate
    SOLU: out-of-order assignments in Parameter-list (fixed)
    
    SYMP: FormulaOperator formatting incorrect in piecewise statement
    HINT: Use html table 
    
    HINT: &#x222b; (html) >> \u222b (JavaScript)

